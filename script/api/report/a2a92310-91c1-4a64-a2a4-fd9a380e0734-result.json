{"name": "test0001", "status": "broken", "statusDetails": {"message": "ValueError: port should be of type int", "trace": "self = <script.api.test_add_course.TestAddCourse object at 0x00000175F58CDA20>\n\n    def test0001(self):\n>       operationsMYSQL = OperationsMYSQL()\n\ntest_add_course.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\common\\mysql_operations.py:7: in __init__\n    self.connection = Connection(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x00000175F58CF880>\n\n    def __init__(\n        self,\n        *,\n        user=None,  # The first four arguments is based on DB-API 2.0 recommendation.\n        password=\"\",\n        host=None,\n        database=None,\n        unix_socket=None,\n        port=0,\n        charset=\"\",\n        collation=None,\n        sql_mode=None,\n        read_default_file=None,\n        conv=None,\n        use_unicode=True,\n        client_flag=0,\n        cursorclass=Cursor,\n        init_command=None,\n        connect_timeout=10,\n        read_default_group=None,\n        autocommit=False,\n        local_infile=False,\n        max_allowed_packet=16 * 1024 * 1024,\n        defer_connect=False,\n        auth_plugin_map=None,\n        read_timeout=None,\n        write_timeout=None,\n        bind_address=None,\n        binary_prefix=False,\n        program_name=None,\n        server_public_key=None,\n        ssl=None,\n        ssl_ca=None,\n        ssl_cert=None,\n        ssl_disabled=None,\n        ssl_key=None,\n        ssl_verify_cert=None,\n        ssl_verify_identity=None,\n        compress=None,  # not supported\n        named_pipe=None,  # not supported\n        passwd=None,  # deprecated\n        db=None,  # deprecated\n    ):\n        if db is not None and database is None:\n            # We will raise warning in 2022 or later.\n            # See https://github.com/PyMySQL/PyMySQL/issues/939\n            # warnings.warn(\"'db' is deprecated, use 'database'\", DeprecationWarning, 3)\n            database = db\n        if passwd is not None and not password:\n            # We will raise warning in 2022 or later.\n            # See https://github.com/PyMySQL/PyMySQL/issues/939\n            # warnings.warn(\n            #    \"'passwd' is deprecated, use 'password'\", DeprecationWarning, 3\n            # )\n            password = passwd\n    \n        if compress or named_pipe:\n            raise NotImplementedError(\n                \"compress and named_pipe arguments are not supported\"\n            )\n    \n        self._local_infile = bool(local_infile)\n        if self._local_infile:\n            client_flag |= CLIENT.LOCAL_FILES\n    \n        if read_default_group and not read_default_file:\n            if sys.platform.startswith(\"win\"):\n                read_default_file = \"c:\\\\my.ini\"\n            else:\n                read_default_file = \"/etc/my.cnf\"\n    \n        if read_default_file:\n            if not read_default_group:\n                read_default_group = \"client\"\n    \n            cfg = Parser()\n            cfg.read(os.path.expanduser(read_default_file))\n    \n            def _config(key, arg):\n                if arg:\n                    return arg\n                try:\n                    return cfg.get(read_default_group, key)\n                except Exception:\n                    return arg\n    \n            user = _config(\"user\", user)\n            password = _config(\"password\", password)\n            host = _config(\"host\", host)\n            database = _config(\"database\", database)\n            unix_socket = _config(\"socket\", unix_socket)\n            port = int(_config(\"port\", port))\n            bind_address = _config(\"bind-address\", bind_address)\n            charset = _config(\"default-character-set\", charset)\n            if not ssl:\n                ssl = {}\n            if isinstance(ssl, dict):\n                for key in [\"ca\", \"capath\", \"cert\", \"key\", \"cipher\"]:\n                    value = _config(\"ssl-\" + key, ssl.get(key))\n                    if value:\n                        ssl[key] = value\n    \n        self.ssl = False\n        if not ssl_disabled:\n            if ssl_ca or ssl_cert or ssl_key or ssl_verify_cert or ssl_verify_identity:\n                ssl = {\n                    \"ca\": ssl_ca,\n                    \"check_hostname\": bool(ssl_verify_identity),\n                    \"verify_mode\": ssl_verify_cert\n                    if ssl_verify_cert is not None\n                    else False,\n                }\n                if ssl_cert is not None:\n                    ssl[\"cert\"] = ssl_cert\n                if ssl_key is not None:\n                    ssl[\"key\"] = ssl_key\n            if ssl:\n                if not SSL_ENABLED:\n                    raise NotImplementedError(\"ssl module not found\")\n                self.ssl = True\n                client_flag |= CLIENT.SSL\n                self.ctx = self._create_ssl_ctx(ssl)\n    \n        self.host = host or \"localhost\"\n        self.port = port or 3306\n        if type(self.port) is not int:\n>           raise ValueError(\"port should be of type int\")\nE           ValueError: port should be of type int\n\nD:\\python3.10.4\\lib\\site-packages\\pymysql\\connections.py:294: ValueError"}, "start": 1715578403329, "stop": 1715578403330, "uuid": "d4099578-5d73-406a-b7c8-df411d926599", "historyId": "fcfb8f32404f9bbb4b4c05de0fc2bc8e", "testCaseId": "fcfb8f32404f9bbb4b4c05de0fc2bc8e", "fullName": "script.api.test_add_course.TestAddCourse#test0001", "labels": [{"name": "parentSuite", "value": "script.api"}, {"name": "suite", "value": "test_add_course"}, {"name": "subSuite", "value": "TestAddCourse"}, {"name": "host", "value": "wangtao"}, {"name": "thread", "value": "11668-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "script.api.test_add_course"}]}